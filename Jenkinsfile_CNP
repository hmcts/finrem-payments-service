#!groovy
import uk.gov.hmcts.contino.AppPipelineDsl

properties([
        [
                $class: 'GithubProjectProperty',
                displayName: 'Financial Remedy Payment Service',
                projectUrlStr: 'https://github.com/hmcts/finrem-payment-service.git'
        ],
        pipelineTriggers([
                [$class: 'GitHubPushTrigger']
        ])
])

@Library("Infrastructure")

def type = "java"
def product = "finrem"
def component = "ps"
def channel = '#finrem-dev'

def secrets = [
        'finrem-${env}': [
                secret("finrem-payment-service-s2s-key", "AUTH_PROVIDER_SERVICE_CLIENT_KEY"),
                secret("idam-secret", "OAUTH2_CLIENT_FINREM"),
                secret("username-solicitor","USERNAME-SOLICITOR"),
                secret("password-solicitor","PASSWORD-SOLICITOR")
        ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class     : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name       : secretName,
     version    : '',
     envVariable: envVar
    ]
}

// Vars for Kubernetes
env.PACT_BROKER_FULL_URL = 'https://pact-broker.platform.hmcts.net'

withPipeline(type, product, component) {
    loadVaultSecrets(secrets)
    enableAksStagingDeployment()
    disableLegacyDeployment()

    after('checkout') {
        echo '${product}-${component} checked out'
    }

    enableSlackNotifications(channel)

    after('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
        publishHTML target: [
                reportDir            : "target/site/serenity/",
                reportFiles          : "index.html",
                reportName           : "AAT Functional Tests",
                alwaysLinkToLastBuild: true
        ]
    }

    after('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
        publishHTML target: [
                reportDir            : "target/site/serenity/",
                reportFiles          : "index.html",
                reportName           : "Preview Functional Tests",
                alwaysLinkToLastBuild: true
        ]
    }

    onMaster() {
        enablePactAs([AppPipelineDsl.PactRoles.CONSUMER, AppPipelineDsl.PactRoles.CONSUMER_DEPLOY_CHECK])
    }
    onPR() {
        enablePactAs([AppPipelineDsl.PactRoles.CONSUMER, AppPipelineDsl.PactRoles.CONSUMER_DEPLOY_CHECK])
    }
}
